(function(){var h=-1;function k(b,d){var a=navigator.userAgent.match(b);return a&&a.length>d&&parseInt(a[d],10)}
window.mozRTCPeerConnection?(console.log("This appears to be Firefox"),h=k(/Firefox\/([0-9]+)\./,1),window.RTCPeerConnection||(window.RTCPeerConnection=function(b,d){if(38>h&&b&&b.iceServers){for(var a=[],c=0;c<b.iceServers.length;c++){var f=b.iceServers[c];if(f.hasOwnProperty("urls"))for(var e=f.urls,g=0;g<e.length;g++){var l={url:e[g]};0===e[g].indexOf("turn")&&(l.username=f.username,l.credential=f.credential);a.push(l)}else a.push(b.iceServers[c])}b.iceServers=a}return new mozRTCPeerConnection(b,
d)},window.RTCPeerConnection.prototype=mozRTCPeerConnection.prototype,window.RTCSessionDescription=mozRTCSessionDescription,window.RTCIceCandidate=mozRTCIceCandidate)):window.webkitRTCPeerConnection?(console.log("This appears to be Chrome"),h=k(/Chrom(e|ium)\/([0-9]+)\./,2),window.RTCPeerConnection=function(b,d){var a=new webkitRTCPeerConnection(b,d),c=a.getStats.bind(a);a.getStats=function(a,b,d){function f(a){var b={};a.result().forEach(function(a){var c={id:a.id,timestamp:a.timestamp,type:a.type};
a.names().forEach(function(b){c[b]=a.stat(b)});b[c.id]=c});return b}var e=this,g=arguments;return 0<arguments.length&&"function"===typeof a?c(a,b):2<=arguments.length?c.apply(this,[function(a){g[1](f(a))},arguments[0]]):new Promise(function(b,d){1===g.length&&"object"===typeof a?c.apply(e,[function(a){b.apply(null,[f(a)])},d]):c.apply(e,[b,d])})};return a},window.RTCPeerConnection.prototype=webkitRTCPeerConnection.prototype,["createOffer","createAnswer"].forEach(function(b){var d=webkitRTCPeerConnection.prototype[b];
webkitRTCPeerConnection.prototype[b]=function(){var a=this;if(1>arguments.length||1===arguments.length&&"object"===typeof arguments[0]){var b=1===arguments.length?arguments[0]:void 0;return new Promise(function(c,e){d.apply(a,[c,e,b])})}return d.apply(this,arguments)}}),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(b){var d=webkitRTCPeerConnection.prototype[b];webkitRTCPeerConnection.prototype[b]=function(){var a=arguments,b=this;return new Promise(function(c,e){d.apply(b,
[a[0],function(){c();2<=a.length&&a[1].apply(null,[])},function(b){e(b);3<=a.length&&a[2].apply(null,[b])}])})}})):navigator.userAgent.match(/Edge\/(\d+).(\d+)$/)?h=k(/Edge\/(\d+).(\d+)$/,2):console.log("Browser does not appear to be WebRTC-capable.");})();
